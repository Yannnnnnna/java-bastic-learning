import java.util.Random;

public class Exercise04 {
    public static void main(String[] args) {
        Random random = new Random(1000);
        for (int i = 0, n = 0; i < 50; i++, n++) {
            if(n % 10 == 0)
                System.out.println();
            System.out.print(random.nextInt(100) + " ");
        }
    }
    /*随机数生成器使用种子来决定第一个随机数。然后，使用一个数值算法（通常是线性同余算法）来计算后续的随机数。
    这意味着如果我们使用相同的种子，它将始终生成相同的随机数序列。

实际上，伪随机数生成器（如Java的Random类）只能生成伪随机数序列，而不是真正的随机数。
换句话说，它们基于固定算法来生成序列，因此在某些方面可能不够随机。

    这行Java代码创建了一个Random对象，并将1000作为种子值（seed）传递给它。种子值会影响随机数的生成过程，相同的种子值会导致生成相同的随机数序列。

因此，如果使用相同的种子值创建了两个Random对象，那么这两个对象将生成相同的随机数序列。
相反，如果使用不同的种子值创建了两个Random对象，那么它们生成的随机数序列将不同。

需要注意的是，如果没有指定种子值，Random构造函数会使用系统当前时间作为默认种子值。
因此，当在同一秒钟内创建两个Random对象时，它们将具有相同的默认种子值，因此生成的随机数序列也将相同。

回到你的问题，即"Random random = new Random(1000)"，它创建了一个Random对象，
并将1000作为种子值来初始化它。这将导致生成的随机数序列与使用其他种子值或默认种子值不同。如果您在程序中多次使用此Random对象，它将会生成相同的随机数序列，可以用于实现重现性测试等场景。
    * */

}


